# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.device import Device  # noqa: F401,E501
from swagger_server import util


class DeviceArray(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, devices: List[Device]=None):  # noqa: E501
        """DeviceArray - a model defined in Swagger

        :param devices: The devices of this DeviceArray.  # noqa: E501
        :type devices: List[Device]
        """
        self.swagger_types = {
            'devices': List[Device]
        }

        self.attribute_map = {
            'devices': 'devices'
        }

        self._devices = devices

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceArray':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceArray of this DeviceArray.  # noqa: E501
        :rtype: DeviceArray
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self) -> List[Device]:
        """Gets the devices of this DeviceArray.


        :return: The devices of this DeviceArray.
        :rtype: List[Device]
        """
        return self._devices

    @devices.setter
    def devices(self, devices: List[Device]):
        """Sets the devices of this DeviceArray.


        :param devices: The devices of this DeviceArray.
        :type devices: List[Device]
        """
        if devices is None:
            raise ValueError("Invalid value for `devices`, must not be `None`")  # noqa: E501

        self._devices = devices
