# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BusinessPlatformUpdate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, merchant_id: str=None, operating_since_month: str=None, operating_since_year: int=None, last_six_months_amount: int=None):  # noqa: E501
        """BusinessPlatformUpdate - a model defined in Swagger

        :param merchant_id: The merchant_id of this BusinessPlatformUpdate.  # noqa: E501
        :type merchant_id: str
        :param operating_since_month: The operating_since_month of this BusinessPlatformUpdate.  # noqa: E501
        :type operating_since_month: str
        :param operating_since_year: The operating_since_year of this BusinessPlatformUpdate.  # noqa: E501
        :type operating_since_year: int
        :param last_six_months_amount: The last_six_months_amount of this BusinessPlatformUpdate.  # noqa: E501
        :type last_six_months_amount: int
        """
        self.swagger_types = {
            'merchant_id': str,
            'operating_since_month': str,
            'operating_since_year': int,
            'last_six_months_amount': int
        }

        self.attribute_map = {
            'merchant_id': 'merchant_id',
            'operating_since_month': 'operating_since_month',
            'operating_since_year': 'operating_since_year',
            'last_six_months_amount': 'last_six_months_amount'
        }

        self._merchant_id = merchant_id
        self._operating_since_month = operating_since_month
        self._operating_since_year = operating_since_year
        self._last_six_months_amount = last_six_months_amount

    @classmethod
    def from_dict(cls, dikt) -> 'BusinessPlatformUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BusinessPlatformUpdate of this BusinessPlatformUpdate.  # noqa: E501
        :rtype: BusinessPlatformUpdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchant_id(self) -> str:
        """Gets the merchant_id of this BusinessPlatformUpdate.


        :return: The merchant_id of this BusinessPlatformUpdate.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id: str):
        """Sets the merchant_id of this BusinessPlatformUpdate.


        :param merchant_id: The merchant_id of this BusinessPlatformUpdate.
        :type merchant_id: str
        """

        self._merchant_id = merchant_id

    @property
    def operating_since_month(self) -> str:
        """Gets the operating_since_month of this BusinessPlatformUpdate.


        :return: The operating_since_month of this BusinessPlatformUpdate.
        :rtype: str
        """
        return self._operating_since_month

    @operating_since_month.setter
    def operating_since_month(self, operating_since_month: str):
        """Sets the operating_since_month of this BusinessPlatformUpdate.


        :param operating_since_month: The operating_since_month of this BusinessPlatformUpdate.
        :type operating_since_month: str
        """

        self._operating_since_month = operating_since_month

    @property
    def operating_since_year(self) -> int:
        """Gets the operating_since_year of this BusinessPlatformUpdate.


        :return: The operating_since_year of this BusinessPlatformUpdate.
        :rtype: int
        """
        return self._operating_since_year

    @operating_since_year.setter
    def operating_since_year(self, operating_since_year: int):
        """Sets the operating_since_year of this BusinessPlatformUpdate.


        :param operating_since_year: The operating_since_year of this BusinessPlatformUpdate.
        :type operating_since_year: int
        """
        if operating_since_year is not None and operating_since_year < 2000:  # noqa: E501
            raise ValueError("Invalid value for `operating_since_year`, must be a value greater than or equal to `2000`")  # noqa: E501

        self._operating_since_year = operating_since_year

    @property
    def last_six_months_amount(self) -> int:
        """Gets the last_six_months_amount of this BusinessPlatformUpdate.


        :return: The last_six_months_amount of this BusinessPlatformUpdate.
        :rtype: int
        """
        return self._last_six_months_amount

    @last_six_months_amount.setter
    def last_six_months_amount(self, last_six_months_amount: int):
        """Sets the last_six_months_amount of this BusinessPlatformUpdate.


        :param last_six_months_amount: The last_six_months_amount of this BusinessPlatformUpdate.
        :type last_six_months_amount: int
        """

        self._last_six_months_amount = last_six_months_amount
