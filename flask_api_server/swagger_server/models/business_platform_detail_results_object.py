# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.business_platform_details import BusinessPlatformDetails  # noqa: F401,E501
from swagger_server.models.metadata import Metadata  # noqa: F401,E501
from swagger_server import util


class BusinessPlatformDetailResultsObject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, business_platform_details: List[BusinessPlatformDetails]=None, metadata: Metadata=None):  # noqa: E501
        """BusinessPlatformDetailResultsObject - a model defined in Swagger

        :param business_platform_details: The business_platform_details of this BusinessPlatformDetailResultsObject.  # noqa: E501
        :type business_platform_details: List[BusinessPlatformDetails]
        :param metadata: The metadata of this BusinessPlatformDetailResultsObject.  # noqa: E501
        :type metadata: Metadata
        """
        self.swagger_types = {
            'business_platform_details': List[BusinessPlatformDetails],
            'metadata': Metadata
        }

        self.attribute_map = {
            'business_platform_details': 'businessPlatformDetails',
            'metadata': 'metadata'
        }

        self._business_platform_details = business_platform_details
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'BusinessPlatformDetailResultsObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BusinessPlatformDetailResultsObject of this BusinessPlatformDetailResultsObject.  # noqa: E501
        :rtype: BusinessPlatformDetailResultsObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_platform_details(self) -> List[BusinessPlatformDetails]:
        """Gets the business_platform_details of this BusinessPlatformDetailResultsObject.


        :return: The business_platform_details of this BusinessPlatformDetailResultsObject.
        :rtype: List[BusinessPlatformDetails]
        """
        return self._business_platform_details

    @business_platform_details.setter
    def business_platform_details(self, business_platform_details: List[BusinessPlatformDetails]):
        """Sets the business_platform_details of this BusinessPlatformDetailResultsObject.


        :param business_platform_details: The business_platform_details of this BusinessPlatformDetailResultsObject.
        :type business_platform_details: List[BusinessPlatformDetails]
        """

        self._business_platform_details = business_platform_details

    @property
    def metadata(self) -> Metadata:
        """Gets the metadata of this BusinessPlatformDetailResultsObject.


        :return: The metadata of this BusinessPlatformDetailResultsObject.
        :rtype: Metadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: Metadata):
        """Sets the metadata of this BusinessPlatformDetailResultsObject.


        :param metadata: The metadata of this BusinessPlatformDetailResultsObject.
        :type metadata: Metadata
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")  # noqa: E501

        self._metadata = metadata
