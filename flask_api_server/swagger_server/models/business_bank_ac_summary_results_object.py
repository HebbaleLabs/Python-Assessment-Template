# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.business_bank_account_summary import BusinessBankAccountSummary  # noqa: F401,E501
from swagger_server.models.metadata import Metadata  # noqa: F401,E501
from swagger_server import util


class BusinessBankAcSummaryResultsObject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, business_bank_account: List[BusinessBankAccountSummary]=None, metadata: Metadata=None):  # noqa: E501
        """BusinessBankAcSummaryResultsObject - a model defined in Swagger

        :param business_bank_account: The business_bank_account of this BusinessBankAcSummaryResultsObject.  # noqa: E501
        :type business_bank_account: List[BusinessBankAccountSummary]
        :param metadata: The metadata of this BusinessBankAcSummaryResultsObject.  # noqa: E501
        :type metadata: Metadata
        """
        self.swagger_types = {
            'business_bank_account': List[BusinessBankAccountSummary],
            'metadata': Metadata
        }

        self.attribute_map = {
            'business_bank_account': 'businessBankAccount',
            'metadata': 'metadata'
        }

        self._business_bank_account = business_bank_account
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'BusinessBankAcSummaryResultsObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BusinessBankAcSummaryResultsObject of this BusinessBankAcSummaryResultsObject.  # noqa: E501
        :rtype: BusinessBankAcSummaryResultsObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_bank_account(self) -> List[BusinessBankAccountSummary]:
        """Gets the business_bank_account of this BusinessBankAcSummaryResultsObject.


        :return: The business_bank_account of this BusinessBankAcSummaryResultsObject.
        :rtype: List[BusinessBankAccountSummary]
        """
        return self._business_bank_account

    @business_bank_account.setter
    def business_bank_account(self, business_bank_account: List[BusinessBankAccountSummary]):
        """Sets the business_bank_account of this BusinessBankAcSummaryResultsObject.


        :param business_bank_account: The business_bank_account of this BusinessBankAcSummaryResultsObject.
        :type business_bank_account: List[BusinessBankAccountSummary]
        """

        self._business_bank_account = business_bank_account

    @property
    def metadata(self) -> Metadata:
        """Gets the metadata of this BusinessBankAcSummaryResultsObject.


        :return: The metadata of this BusinessBankAcSummaryResultsObject.
        :rtype: Metadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: Metadata):
        """Sets the metadata of this BusinessBankAcSummaryResultsObject.


        :param metadata: The metadata of this BusinessBankAcSummaryResultsObject.
        :type metadata: Metadata
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")  # noqa: E501

        self._metadata = metadata
