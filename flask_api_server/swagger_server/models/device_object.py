# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.device import Device  # noqa: F401,E501
from swagger_server import util


class DeviceObject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, device: Device=None):  # noqa: E501
        """DeviceObject - a model defined in Swagger

        :param device: The device of this DeviceObject.  # noqa: E501
        :type device: Device
        """
        self.swagger_types = {
            'device': Device
        }

        self.attribute_map = {
            'device': 'device'
        }

        self._device = device

    @classmethod
    def from_dict(cls, dikt) -> 'DeviceObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeviceObject of this DeviceObject.  # noqa: E501
        :rtype: DeviceObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self) -> Device:
        """Gets the device of this DeviceObject.


        :return: The device of this DeviceObject.
        :rtype: Device
        """
        return self._device

    @device.setter
    def device(self, device: Device):
        """Sets the device of this DeviceObject.


        :param device: The device of this DeviceObject.
        :type device: Device
        """
        if device is None:
            raise ValueError("Invalid value for `device`, must not be `None`")  # noqa: E501

        self._device = device
