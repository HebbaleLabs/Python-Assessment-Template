# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OperatingType(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, operating_type_code: str=None, operating_type_desc: str=None):  # noqa: E501
        """OperatingType - a model defined in Swagger

        :param id: The id of this OperatingType.  # noqa: E501
        :type id: str
        :param operating_type_code: The operating_type_code of this OperatingType.  # noqa: E501
        :type operating_type_code: str
        :param operating_type_desc: The operating_type_desc of this OperatingType.  # noqa: E501
        :type operating_type_desc: str
        """
        self.swagger_types = {
            'id': str,
            'operating_type_code': str,
            'operating_type_desc': str
        }

        self.attribute_map = {
            'id': '_id',
            'operating_type_code': 'operating_type_code',
            'operating_type_desc': 'operating_type_desc'
        }

        self._id = id
        self._operating_type_code = operating_type_code
        self._operating_type_desc = operating_type_desc

    @classmethod
    def from_dict(cls, dikt) -> 'OperatingType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OperatingType of this OperatingType.  # noqa: E501
        :rtype: OperatingType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this OperatingType.


        :return: The id of this OperatingType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this OperatingType.


        :param id: The id of this OperatingType.
        :type id: str
        """

        self._id = id

    @property
    def operating_type_code(self) -> str:
        """Gets the operating_type_code of this OperatingType.


        :return: The operating_type_code of this OperatingType.
        :rtype: str
        """
        return self._operating_type_code

    @operating_type_code.setter
    def operating_type_code(self, operating_type_code: str):
        """Sets the operating_type_code of this OperatingType.


        :param operating_type_code: The operating_type_code of this OperatingType.
        :type operating_type_code: str
        """
        if operating_type_code is None:
            raise ValueError("Invalid value for `operating_type_code`, must not be `None`")  # noqa: E501

        self._operating_type_code = operating_type_code

    @property
    def operating_type_desc(self) -> str:
        """Gets the operating_type_desc of this OperatingType.


        :return: The operating_type_desc of this OperatingType.
        :rtype: str
        """
        return self._operating_type_desc

    @operating_type_desc.setter
    def operating_type_desc(self, operating_type_desc: str):
        """Sets the operating_type_desc of this OperatingType.


        :param operating_type_desc: The operating_type_desc of this OperatingType.
        :type operating_type_desc: str
        """
        if operating_type_desc is None:
            raise ValueError("Invalid value for `operating_type_desc`, must not be `None`")  # noqa: E501

        self._operating_type_desc = operating_type_desc
